
module.exports = {
    '<abs()>': 'abs(<calc-sum>)',
    '<absolute-size>': 'xx-small | x-small | small | medium | large | x-large | xx-large',
    '<acos()>': 'acos(<calc-sum>)',
    '<age>': 'child | young | old',
    '<alpha-value>': '<number> | <percentage>',
    '<an+b>': "odd | even | <integer> | <n-dimension> | '+'? n | -n | <ndashdigit-dimension> | '+'? <ndashdigit-ident> | <dashndashdigit-ident> | <n-dimension> <signed-integer> | '+'? n <signed-integer> | -n <signed-integer> | <ndash-dimension> <signless-integer> | '+'? n- <signless-integer> | -n- <signless-integer> | <n-dimension> ['+' | '-'] <signless-integer> | '+'? n ['+' | '-'] <signless-integer> | -n ['+' | '-'] <signless-integer>",
    '<anchor()>': 'anchor(<anchor-name>? && <anchor-side> , <length-percentage>?)',
    '<anchor-name>': '<dashed-ident>',
    '<anchor-side>': 'inside | outside | top | left | right | bottom | start | end | self-start | self-end | <percentage> | center',
    '<anchor-size()>': 'anchor-size([<anchor-name> || <anchor-size>]? , <length-percentage>?)',
    '<anchor-size>': 'width | height | block | inline | self-block | self-inline',
    '<angle-percentage>': '<angle> | <percentage>',
    '<angle>': '<dimension>',
    '<angular-color-hint>': '<angle-percentage> | <zero>',
    '<angular-color-stop-list>': '<angular-color-stop> , [<angular-color-hint>? , <angular-color-stop>]#?',
    '<angular-color-stop>': '<color> <color-stop-angle>?',
    '<animateable-feature>': 'scroll-position | contents | <custom-ident>',
    '<arc-command>': 'arc <command-end-point> [of <length-percentage>{1,2} && <arc-sweep>? && <arc-size>? && [rotate <angle>]?]',
    '<arc-size>': 'large | small',
    '<arc-sweep>': 'cw | ccw',
    '<asin()>': 'asin(<calc-sum>)',
    '<atan()>': 'atan(<calc-sum>)',
    '<atan2()>': 'atan2(<calc-sum> , <calc-sum>)',
    '<attachment>': 'scroll | fixed | local',
    '<attr()>': 'attr(<attr-name> <attr-type>? , <declaration-value>?)',
    '<attr-matcher>': "['~' | '|' | '^' | '$' | '*']? '='",
    '<attr-modifier>': 'i | s',
    '<attr-name>': "[<ident-token>? '|']? <ident-token>",
    '<attr-type>': 'type(<syntax>) | raw-string | <attr-unit>',
    '<attr-unit>': "'%' | deg | grad | rad | turn | db | fr | hz | khz | cap | ch | cm | cqb | cqh | cqi | cqmax | cqmin | cqw | dvb | dvh | dvi | dvmax | dvmin | dvw | em | ex | ic | in | lh | lvb | lvh | lvi | lvmax | lvmin | lvw | mm | pc | pt | px | q | rcap | rch | rem | rex | ric | rlh | svb | svh | svi | svmax | svmin | svw | vb | vh | vi | vmax | vmin | vw | dpcm | dpi | dppx | x | st | ms | s",
    '<attribute-selector>': "'['<wq-name>']' | '['<wq-name> <attr-matcher> [<string-token> | <ident-token>] <attr-modifier>?']'",
    '<auto-repeat>': 'repeat([auto-fill | auto-fit] , [<line-names>? <fixed-size>]+ <line-names>?)',
    '<auto-track-list>': '[<line-names>? [<fixed-size> | <fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size> | <fixed-repeat>]]* <line-names>?',
    '<autospace>': 'no-autospace | ideograph-alpha || ideograph-numeric || punctuation || [insert | replace]',
    '<axis>': 'block | inline | x | y',
    '<baseline-position>': '[first | last]? && baseline',
    '<basic-shape-rect>': '<inset()> | <rect()> | <xywh()>',
    '<basic-shape>': '<basic-shape-rect> | <circle()> | <ellipse()> | <polygon()> | <path()> | <shape()>',
    '<bg-clip>': '<visual-box> | border-area | text',
    '<bg-image>': '<image> | none',
    '<bg-layer>': '<bg-image> || <bg-position> [/ <bg-size>]? || <repeat-style> || <attachment> || <visual-box> || <visual-box>',
    '<bg-position>': '<position> | <position-three>',
    '<bg-size>': '[<length-percentage [0,∞]> | auto]{1,2} | cover | contain',
    '<blend-mode>': 'normal | multiply | screen | overlay | darken | lighten | color-dodge | color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity',
    '<blur()>': 'blur(<length>?)',
    '<brightness()>': 'brightness([<number> | <percentage>]?)',
    '<calc()>': 'calc(<calc-sum>)',
    '<calc-keyword>': 'e | pi | infinity | -infinity | NaN',
    '<calc-mix()>': 'calc-mix(<progress> , <calc-sum> , <calc-sum>)',
    '<calc-product>': "<calc-value> [['*' | /] <calc-value>]*",
    '<calc-size()>': 'calc-size(<calc-size-basis> , <calc-sum>)',
    '<calc-size-basis>': '<intrinsic-size-keyword> | <calc-size()> | any | <calc-sum>',
    '<calc-sum>': "<calc-product> [['+' | '-'] <calc-product>]*",
    '<calc-value>': '<number> | <dimension> | <percentage> | <calc-keyword> | (<calc-sum>)',
    '<cf-image>': '[<image> | <color>] && <percentage [0,100]>?',
    '<circle()>': 'circle(<radial-size>? [at <position>]?)',
    '<clamp()>': 'clamp([<calc-sum> | none] , <calc-sum> , [<calc-sum> | none])',
    '<class-selector>': "'.' <ident-token>",
    '<clip-source>': '<url>',
    '<cmyk-component>': '<number> | <percentage> | none',
    '<color()>': 'color([from <color>]? <colorspace-params> [/ [<alpha-value> | none]]?)',
    '<color-base>': '<hex-color> | <color-function> | <named-color> | <color-mix()> | transparent',
    '<color-font-tech>': 'color-COLRv0 | color-COLRv1 | color-SVG | color-sbix | color-CBDT',
    '<color-function>': '<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <oklab()> | <oklch()> | <color()>',
    '<color-interpolation-method>': 'in [<rectangular-color-space> | <polar-color-space> <hue-interpolation-method>? | <custom-color-space>]',
    '<color-mix()>': 'color-mix([<progress> && <color-interpolation-method>?] , <color> , <color>) | color-mix(<color-interpolation-method> , [<color> && <percentage [0,100]>?]#{2})',
    '<color-space>': '<rectangular-color-space> | <polar-color-space> | <custom-color-space>',
    '<color-stop-angle>': '[<angle-percentage> | <zero>]{1,2}',
    '<color-stop-length>': '<length-percentage>{1,2}',
    '<color-stop-list>': '<linear-color-stop> , [<linear-color-hint>? , <linear-color-stop>]#?',
    '<color-stop>': '<color-stop-length> | <color-stop-angle>',
    '<color-stripe>': '<color> && [<length-percentage> | <flex>]?',
    '<color>': '<color-base> | currentColor | <system-color> | <contrast-color()> | <device-cmyk()> | <light-dark()>',
    '<colorspace-params>': '<custom-params> | <predefined-rgb-params> | <predefined-polar-params> | <predefined-rectangular-params> | <xyz-params>',
    '<combinator>': "'>' | '+' | '~' | '|' '|'",
    '<command-end-point>': 'to <position> | by <coordinate-pair>',
    '<common-lig-values>': 'common-ligatures | no-common-ligatures',
    '<compat-auto>': 'searchfield | textarea | checkbox | radio | menulist | listbox | meter | progress-bar | button',
    '<compat-special>': 'textfield | menulist-button',
    '<complex-real-selector-list>': '<complex-real-selector>#',
    '<complex-real-selector>': '<compound-selector> [<combinator>? <compound-selector>]*',
    '<complex-selector-list>': '<complex-selector>#',
    '<complex-selector-unit>': '[<compound-selector>? <pseudo-compound-selector>*]!',
    '<complex-selector>': '<complex-selector-unit> [<combinator>? <complex-selector-unit>]*',
    '<composite-mode>': 'clear | copy | source-over | destination-over | source-in | destination-in | source-out | destination-out | source-atop | destination-atop | xor | lighter | plus-darker | plus-lighter',
    '<compositing-operator>': 'add | subtract | intersect | exclude',
    '<compound-selector-list>': '<compound-selector>#',
    '<compound-selector>': '[<type-selector>? <subclass-selector>*]!',
    '<conic-gradient()>': 'conic-gradient(<conic-gradient-syntax>)',
    '<conic-gradient-syntax>': '[[[from [<angle> | <zero>]]? [at <position>]?]! || <color-interpolation-method>]? , <angular-color-stop-list>',
    '<container-condition>': '[<container-name>? <container-query>?]!',
    '<container-name>': '<custom-ident>',
    '<container-progress()>': 'container-progress(<mf-name> [of <container-name>]? , <calc-sum> , <calc-sum>)',
    '<container-query>': 'not <query-in-parens> | <query-in-parens> [[and <query-in-parens>]* | [or <query-in-parens>]*]',
    '<content()>': 'content([text | before | after | first-letter | marker]?)',
    '<content-distribution>': 'space-between | space-around | space-evenly | stretch',
    '<content-level>': 'element | content | text | <attr()> | <counter>',
    '<content-list>': '[<string> | <image> | <attr()> | contents | <quote> | <leader()> | <target> | <string()> | <content()> | <counter>]+',
    '<content-position>': 'center | start | end | flex-start | flex-end',
    '<content-replacement>': '<image>',
    '<contextual-alt-values>': 'contextual | no-contextual',
    '<contrast()>': 'contrast([<number> | <percentage>]?)',
    '<contrast-color()>': 'contrast-color(<color>)',
    '<control-point>': '<position> | <relative-control-point>',
    '<control-value()>': 'control-value(<syntax-type-name>?)',
    '<coord-box>': '<paint-box> | view-box',
    '<coordinate-pair>': '<length-percentage>{2}',
    '<corner-shape-value>': 'round | scoop | bevel | notch | straight | squircle | superellipse(<number [0,∞]> | infinity)',
    '<cos()>': 'cos(<calc-sum>)',
    '<counter()>': 'counter(<counter-name> , <counter-style>?)',
    '<counter-name>': '<custom-ident>',
    '<counter-style-name>': '<custom-ident>',
    '<counter-style>': '<counter-style-name> | <symbols()>',
    '<counter>': '<counter()> | <counters()>',
    '<counters()>': 'counters(<counter-name> , <string> , <counter-style>?)',
    '<cross-fade()>': 'cross-fade(<progress> , [<image> | <color>] , [<image> | <color>]) | cross-fade(<cf-image>#)',
    '<crossorigin-modifier>': 'crossorigin(anonymous | use-credentials)',
    '<css-type>': '<syntax-component> | <type()>',
    '<cubic-bezier()>': 'cubic-bezier([<number [0,1]> , <number>]#{2})',
    '<cubic-bezier-easing-function>': 'ease | ease-in | ease-out | ease-in-out | <cubic-bezier()>',
    '<curve-command>': 'curve [to <position> with <control-point> [/ <control-point>]? | by <coordinate-pair> with <relative-control-point> [/ <relative-control-point>]?]',
    '<custom-arg>': '$ <ident-token> ;',
    '<custom-color-space>': '<dashed-ident>',
    '<custom-ident>': '<ident>',
    '<custom-params>': '<dashed-ident> [<number> | <percentage> | none]+',
    '<custom-property-name>': '<dashed-ident>',
    '<custom-selector>': '<custom-arg>? : <extension-name> [(<custom-arg>+#?)]? ;',
    '<dasharray>': '[<length-percentage> | <number>]+#',
    '<dashed-function-head>': '<function-token> <function-parameter>#? ) [returns <css-type>]?',
    '<dashed-function>': {
        name: '<dashed-function>',
        type: 'non-terminal',
        value: {
            name: '<dashed-ident>',
            type: 'function',
            value: '<declaration-value>#?',
        },
    },
    '<dashed-ident>': '<custom-ident>',
    '<dashndashdigit-ident>': '<ident-token>',
    '<decibel>': '<dimension>',
    '<deprecated-color>': 'ActiveBorder | ActiveCaption | AppWorkspace | Background | ButtonHighlight | ButtonShadow | CaptionText | InactiveBorder | InactiveCaption | InactiveCaptionText | InfoBackground | InfoText | Menu | MenuText | Scrollbar | ThreeDDarkShadow | ThreeDFace | ThreeDHighlight | ThreeDLightShadow | ThreeDShadow | Window | WindowFrame | WindowText',
    '<device-cmyk()>': '<legacy-device-cmyk-syntax> | <modern-device-cmyk-syntax>',
    '<dimension>': '<dimension-token>',
    '<discretionary-lig-values>': 'discretionary-ligatures | no-discretionary-ligatures',
    '<display-box>': 'contents | none',
    '<display-inside>': 'flow | flow-root | table | flex | grid | ruby',
    '<display-internal>': 'table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container',
    '<display-legacy>': 'inline-block | inline-table | inline-flex | inline-grid',
    '<display-listitem>': '<display-outside>? && [flow | flow-root]? && list-item',
    '<display-outside>': 'block | inline | run-in',
    '<drop-shadow()>': 'drop-shadow(<color>? && <length>{2,3})',
    '<dynamic-range-limit-mix()>': "dynamic-range-limit-mix([<'dynamic-range-limit'> && <percentage [0,100]>]#{2,∞})",
    '<easing-function>': '<linear-easing-function> | <cubic-bezier-easing-function> | <step-easing-function>',
    '<east-asian-variant-values>': 'jis78 | jis83 | jis90 | jis04 | simplified | traditional',
    '<east-asian-width-values>': 'full-width | proportional-width',
    '<element()>': 'element(<id-selector>)',
    '<ellipse()>': 'ellipse(<radial-size>? [at <position>]?)',
    '<env()>': 'env(<custom-ident> <integer [0,∞]>* , <declaration-value>?)',
    '<exp()>': 'exp(<calc-sum>)',
    '<explicit-track-list>': '[<line-names>? <track-size>]+ <line-names>?',
    '<extension-name>': '<dashed-ident>',
    '<fade()>': 'fade(<length-percentage>)',
    '<family-name>': '<string> | <custom-ident>+',
    '<feature-tag-value>': '<opentype-tag> [<integer [0,∞]> | on | off]?',
    '<feature-value-name>': '<ident>',
    '<filter()>': 'filter([<image> | <string>] , <filter-value-list>)',
    '<filter-function>': '<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>',
    '<filter-value-list>': '[<filter-function> | <url>]+',
    '<final-bg-layer>': "<bg-image> || <bg-position> [/ <bg-size>]? || <repeat-style> || <attachment> || <visual-box> || <visual-box> || <'background-color'>",
    '<first-valid()>': 'first-valid(<declaration-value>#)',
    '<fixed-breadth>': '<length-percentage [0,∞]>',
    '<fixed-repeat>': 'repeat(<integer [1,∞]> , [<line-names>? <fixed-size>]+ <line-names>?)',
    '<fixed-size>': '<fixed-breadth> | minmax(<fixed-breadth> , <track-breadth>) | minmax(<inflexible-breadth> , <fixed-breadth>)',
    '<flex>': '<dimension>',
    '<font-features-tech>': 'features-opentype | features-aat | features-graphite',
    '<font-format>': '<string> | collection | embedded-opentype | opentype | svg | truetype | woff | woff2',
    '<font-src>': '<url> [format(<font-format>)]? [tech(<font-tech>#)]? | local(<family-name>)',
    '<font-tech>': '<font-features-tech> | <color-font-tech> | variations | palettes | incremental',
    '<font-variant-css2>': 'normal | small-caps',
    '<font-weight-absolute>': 'normal | bold | <number [1,1000]>',
    '<font-width-css3>': 'normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded',
    '<form-control-identifier>': 'select',
    '<frequency-percentage>': '<frequency> | <percentage>',
    '<frequency>': '<dimension>',
    '<function-parameter>': '<custom-property-name> <css-type>? [: <declaration-value>]?',
    '<gender>': 'male | female | neutral',
    '<general-enclosed>': '<function-token> <any-value>? ) | (<any-value>?)',
    '<generic-complete>': 'serif | sans-serif | system-ui | cursive | fantasy | math | monospace',
    '<generic-family>': '<generic-script-specific> | <generic-complete> | <generic-incomplete>',
    '<generic-incomplete>': 'ui-serif | ui-sans-serif | ui-monospace | ui-rounded',
    '<generic-script-specific>': 'generic(fangsong) | generic(kai) | generic(khmer-mul) | generic(nastaliq)',
    '<generic-voice>': '<age>? <gender> <integer>?',
    '<geometry-box>': '<shape-box> | fill-box | stroke-box | view-box',
    '<gradient>': '<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()> | <conic-gradient()> | <repeating-conic-gradient()>',
    '<grayscale()>': 'grayscale([<number> | <percentage>]?)',
    '<grid-line>': 'auto | <custom-ident> | [<integer [-∞,-1]> | <integer [1,∞]>] && <custom-ident>? | span && [<integer [1,∞]> || <custom-ident>]',
    '<hdr-color()>': 'color-hdr([<color> && <number [0,∞]>?]#{2})',
    '<hex-color>': '<hash-token>',
    '<historical-lig-values>': 'historical-ligatures | no-historical-ligatures',
    '<horizontal-line-command>': 'hline [to [<length-percentage> | left | center | right | x-start | x-end] | by <length-percentage>]',
    '<hsl()>': '<legacy-hsl-syntax> | <modern-hsl-syntax>',
    '<hsla()>': '<legacy-hsla-syntax> | <modern-hsla-syntax>',
    '<hue-interpolation-method>': '[shorter | longer | increasing | decreasing] hue',
    '<hue-rotate()>': 'hue-rotate([<angle> | <zero>]?)',
    '<hue>': '<number> | <angle>',
    '<hwb()>': 'hwb([from <color>]? [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [/ [<alpha-value> | none]]?)',
    '<hypot()>': 'hypot(<calc-sum>#)',
    '<id-selector>': '<hash-token>',
    '<id>': '<id-selector>',
    '<ident()>': 'ident(<ident-arg>+)',
    '<ident-arg>': '<string> | <integer> | <ident>',
    '<ident>': '<ident-token>',
    '<image()>': 'image(<image-tags>? [<image-src>? , <color>?]!)',
    '<image-1D>': '<stripes()>',
    '<image-set()>': 'image-set(<image-set-option>#)',
    '<image-set-option>': '[<image> | <string>] [<resolution> || type(<string>)]?',
    '<image-src>': '<url> | <string>',
    '<image-tags>': 'ltr | rtl',
    '<image>': '<url> | <image()> | <image-set()> | <cross-fade()> | <element()> | <gradient>',
    '<import-conditions>': '[supports(<supports-condition> | <declaration>)]? <media-query-list>?',
    '<inflexible-breadth>': '<length-percentage [0,∞]> | min-content | max-content | auto',
    '<inherit()>': 'inherit(<custom-property-name> , <declaration-value>?)',
    '<inset()>': "inset(<length-percentage>{1,4} [round <'border-radius'>]?)",
    '<integer>': '<number-token>',
    '<integrity-modifier>': 'integrity(<string>)',
    '<intrinsic-size-keyword>': '<ident>',
    '<invert()>': 'invert([<number> | <percentage>]?)',
    '<isolation-mode>': 'auto | isolate',
    '<keyframe-block>': '<keyframe-selector># {<declaration-list>}',
    '<keyframe-selector>': 'from | to | <percentage [0,100]> | <timeline-range-name> <percentage>',
    '<keyframes-name>': '<custom-ident> | <string>',
    '<lab()>': 'lab([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [/ [<alpha-value> | none]]?)',
    '<layer-name>': "<ident> ['.' <ident>]*",
    '<layout-box>': '<visual-box> | margin-box',
    '<lch()>': 'lch([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<hue> | none] [/ [<alpha-value> | none]]?)',
    '<leader()>': 'leader(<leader-type>)',
    '<leader-type>': 'dotted | solid | space | <string>',
    '<legacy-device-cmyk-syntax>': 'device-cmyk(<number>#{4})',
    '<legacy-hsl-syntax>': 'hsl(<hue> , <percentage> , <percentage> , <alpha-value>?)',
    '<legacy-hsla-syntax>': 'hsla(<hue> , <percentage> , <percentage> , <alpha-value>?)',
    '<legacy-pseudo-element-selector>': ': [before | after | first-line | first-letter]',
    '<legacy-rgb-syntax>': 'rgb(<percentage>#{3} , <alpha-value>?) | rgb(<number>#{3} , <alpha-value>?)',
    '<legacy-rgba-syntax>': 'rgba(<percentage>#{3} , <alpha-value>?) | rgba(<number>#{3} , <alpha-value>?)',
    '<length-percentage>': '<length> | <percentage>',
    '<length>': '<dimension>',
    '<light-dark()>': 'light-dark(<color> , <color>)',
    '<line-command>': 'line <command-end-point>',
    '<line-name-list>': '[<line-names> | <name-repeat>]+',
    '<line-names>': "'['<custom-ident>*']'",
    '<line-style>': 'none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset',
    '<line-width>': '<length [0,∞]> | thin | medium | thick',
    '<linear()>': 'linear([<number> && <percentage>{0,2}]#)',
    '<linear-color-hint>': '<length-percentage>',
    '<linear-color-stop>': '<color> <color-stop-length>?',
    '<linear-easing-function>': 'linear | <linear()>',
    '<linear-gradient()>': 'linear-gradient(<linear-gradient-syntax>)',
    '<linear-gradient-syntax>': '[[<angle> | <zero> | to <side-or-corner>] || <color-interpolation-method>]? , <color-stop-list>',
    '<link-param>': 'param(<custom-property-name> <declaration-value>?)',
    '<log()>': 'log(<calc-sum> , <calc-sum>?)',
    '<marker-ref>': '<url>',
    '<mask-layer>': '<mask-reference> || <position> [/ <bg-size>]? || <repeat-style> || <geometry-box> || [<geometry-box> | no-clip] || <compositing-operator> || <masking-mode>',
    '<mask-reference>': 'none | <image>',
    '<masking-mode>': 'alpha | luminance | match-source',
    '<matrix()>': 'matrix(<number>#{6})',
    '<matrix3d()>': 'matrix3d(<number>#{16})',
    '<max()>': 'max(<calc-sum>#)',
    '<media()>': 'media(<mf-plain> | <mf-boolean> | <mf-range>)',
    '<media-and>': 'and <media-in-parens>',
    '<media-condition-without-or>': '<media-not> | <media-in-parens> <media-and>*',
    '<media-condition>': '<media-not> | <media-in-parens> [<media-and>* | <media-or>*]',
    '<media-feature>': '<mf-plain> | <mf-boolean> | <mf-range>',
    '<media-in-parens>': '(<media-condition>) | (<media-feature>) | <general-enclosed>',
    '<media-not>': 'not <media-in-parens>',
    '<media-or>': 'or <media-in-parens>',
    '<media-progress()>': 'media-progress(<mf-name> , <calc-sum> , <calc-sum>)',
    '<media-query>': '<media-condition> | [not | only]? <media-type> [and <media-condition-without-or>]?',
    '<media-type>': '<ident>',
    '<mf-boolean>': '<mf-name>',
    '<mf-comparison>': '<mf-lt> | <mf-gt> | <mf-eq>',
    '<mf-eq>': "'='",
    '<mf-gt>': "'>' '='?",
    '<mf-lt>': "'<' '='?",
    '<mf-name>': '<ident>',
    '<mf-plain>': '<mf-name> : <mf-value>',
    '<mf-range>': '<mf-name> <mf-comparison> <mf-value> | <mf-value> <mf-comparison> <mf-name> | <mf-value> <mf-lt> <mf-name> <mf-lt> <mf-value> | <mf-value> <mf-gt> <mf-name> <mf-gt> <mf-value>',
    '<mf-value>': '<number> | <dimension> | <ident> | <ratio>',
    '<min()>': 'min(<calc-sum>#)',
    '<mix()>': 'mix(<progress> , <whole-value> , <whole-value>) | mix(<progress> && of <keyframes-name>)',
    '<mod()>': 'mod(<calc-sum> , <calc-sum>)',
    '<modern-device-cmyk-syntax>': 'device-cmyk(<cmyk-component>{4} [/ [<alpha-value> | none]]?)',
    '<modern-hsl-syntax>': 'hsl([from <color>]? [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [/ [<alpha-value> | none]]?)',
    '<modern-hsla-syntax>': 'hsla([from <color>]? [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [/ [<alpha-value> | none]]?)',
    '<modern-rgb-syntax>': 'rgb([from <color>]? [<number> | <percentage> | none]{3} [/ [<alpha-value> | none]]?)',
    '<modern-rgba-syntax>': 'rgba([from <color>]? [<number> | <percentage> | none]{3} [/ [<alpha-value> | none]]?)',
    '<move-command>': 'move <command-end-point>',
    '<mq-boolean>': '<integer [0,1]>',
    '<n-dimension>': '<dimension-token>',
    '<name-repeat>': 'repeat([<integer [1,∞]> | auto-fill] , <line-names>+)',
    '<named-color>': 'aliceblue | antiquewhite | aqua | aquamarine | azure | beige | bisque | black | blanchedalmond | blue | blueviolet | brown | burlywood | cadetblue | chartreuse | chocolate | coral | cornflowerblue | cornsilk | crimson | cyan | darkblue | darkcyan | darkgoldenrod | darkgray | darkgreen | darkgrey | darkkhaki | darkmagenta | darkolivegreen | darkorange | darkorchid | darkred | darksalmon | darkseagreen | darkslateblue | darkslategray | darkslategrey | darkturquoise | darkviolet | deeppink | deepskyblue | dimgray | dimgrey | dodgerblue | firebrick | floralwhite | forestgreen | fuchsia | gainsboro | ghostwhite | gold | goldenrod | gray | green | greenyellow | grey | honeydew | hotpink | indianred | indigo | ivory | khaki | lavender | lavenderblush | lawngreen | lemonchiffon | lightblue | lightcoral | lightcyan | lightgoldenrodyellow | lightgray | lightgreen | lightgrey | lightpink | lightsalmon | lightseagreen | lightskyblue | lightslategray | lightslategrey | lightsteelblue | lightyellow | lime | limegreen | linen | magenta | maroon | mediumaquamarine | mediumblue | mediumorchid | mediumpurple | mediumseagreen | mediumslateblue | mediumspringgreen | mediumturquoise | mediumvioletred | midnightblue | mintcream | mistyrose | moccasin | navajowhite | navy | oldlace | olive | olivedrab | orange | orangered | orchid | palegoldenrod | palegreen | paleturquoise | palevioletred | papayawhip | peachpuff | peru | pink | plum | powderblue | purple | rebeccapurple | red | rosybrown | royalblue | saddlebrown | salmon | sandybrown | seagreen | seashell | sienna | silver | skyblue | slateblue | slategray | slategrey | snow | springgreen | steelblue | tan | teal | thistle | tomato | turquoise | violet | wheat | white | whitesmoke | yellow | yellowgreen',
    '<namespace-prefix>': '<ident>',
    '<ndash-dimension>': '<dimension-token>',
    '<ndashdigit-dimension>': '<dimension-token>',
    '<ndashdigit-ident>': '<ident-token>',
    '<ns-prefix>': "[<ident-token> | '*']? '|'",
    '<number-optional-number>': '<number> <number>?',
    '<number>': '<number-token>',
    '<numeric-figure-values>': 'lining-nums | oldstyle-nums',
    '<numeric-fraction-values>': 'diagonal-fractions | stacked-fractions',
    '<numeric-spacing-values>': 'proportional-nums | tabular-nums',
    '<offset-path>': '<ray()> | <url> | <basic-shape>',
    '<oklab()>': 'oklab([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [/ [<alpha-value> | none]]?)',
    '<oklch()>': 'oklch([from <color>]? [<percentage> | <number> | none] [<percentage> | <number> | none] [<hue> | none] [/ [<alpha-value> | none]]?)',
    '<opacity()>': 'opacity([<number> | <percentage>]?)',
    '<opacity-value>': '<number> | <percentage>',
    '<opentype-tag>': '<string>',
    '<outline-line-style>': 'none | dotted | dashed | solid | double | groove | ridge | inset | outset | auto',
    '<overflow-position>': 'unsafe | safe',
    '<page-selector-list>': '<page-selector>#',
    '<page-selector>': '[<ident-token>? <pseudo-page>*]!',
    '<page-size>': 'A5 | A4 | A3 | B5 | B4 | JIS-B5 | JIS-B4 | letter | legal | ledger',
    '<paint()>': 'paint(<ident> , <declaration-value>?)',
    '<paint-box>': '<visual-box> | fill-box | stroke-box',
    '<paint>': 'none | <color> | <url> [none | <color>]? | context-fill | context-stroke',
    '<palette-identifier>': '<dashed-ident>',
    '<palette-mix()>': 'palette-mix(<color-interpolation-method> , [[normal | light | dark | <palette-identifier> | <palette-mix()>] && <percentage [0,100]>?]#{2})',
    '<path()>': "path(<'fill-rule'>? , <string>)",
    '<percentage>': '<percentage-token>',
    '<perspective()>': 'perspective(<length [0,∞]> | none)',
    '<points>': '<number>+#',
    '<polar-color-space>': 'hsl | hwb | lch | oklch',
    '<polygon()>': "polygon(<'fill-rule'>? [round <length>]? , [<length-percentage> <length-percentage>]#)",
    '<position-area>': '[left | center | right | span-left | span-right | x-start | x-end | span-x-start | span-x-end | x-self-start | x-self-end | span-x-self-start | span-x-self-end | span-all] || [top | center | bottom | span-top | span-bottom | y-start | y-end | span-y-start | span-y-end | y-self-start | y-self-end | span-y-self-start | span-y-self-end | span-all] | [block-start | center | block-end | span-block-start | span-block-end | span-all] || [inline-start | center | inline-end | span-inline-start | span-inline-end | span-all] | [self-block-start | center | self-block-end | span-self-block-start | span-self-block-end | span-all] || [self-inline-start | center | self-inline-end | span-self-inline-start | span-self-inline-end | span-all] | [start | center | end | span-start | span-end | span-all]{1,2} | [self-start | center | self-end | span-self-start | span-self-end | span-all]{1,2}',
    '<position-four>': '[left | right | x-start | x-end] <length-percentage> && [top | bottom | y-start | y-end] <length-percentage> | [block-start | block-end] <length-percentage> && [inline-start | inline-end] <length-percentage> | [[start | end] <length-percentage>]{2}',
    '<position-one>': 'left | center | right | top | bottom | x-start | x-end | y-start | y-end | block-start | block-end | inline-start | inline-end | <length-percentage>',
    '<position-three>': '[left | center | right] && [top | bottom] <length-percentage> | [left | right] <length-percentage> && [top | center | bottom]',
    '<position-two>': '[left | center | right | x-start | x-end] && [top | center | bottom | y-start | y-end] | [left | center | right | x-start | x-end | <length-percentage>] [top | center | bottom | y-start | y-end | <length-percentage>] | [block-start | center | block-end] && [inline-start | center | inline-end] | [start | center | end]{2}',
    '<position>': '<position-one> | <position-two> | <position-four>',
    '<pow()>': 'pow(<calc-sum> , <calc-sum>)',
    '<predefined-polar-params>': 'jzczhz [<number> | <percentage> | none]{2} [<hue> | none]',
    '<predefined-rectangular-params>': '<predefined-rectangular> [<number> | <percentage> | none]{3}',
    '<predefined-rectangular>': 'jzazbz | ictcp',
    '<predefined-rgb-params>': '<predefined-rgb> [<number> | <percentage> | none]{3}',
    '<predefined-rgb>': 'srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | rec2100-pq | rec2100-hlg | rec2100-linear',
    '<progress()>': 'progress(<calc-sum> , <calc-sum> , <calc-sum>)',
    '<progress>': "[<calc-sum> | <'animation-timeline'>] && [by <easing-function>]?",
    '<pseudo-class-selector>': ': <ident-token> | : <function-token> <any-value> )',
    '<pseudo-compound-selector>': '<pseudo-element-selector> <pseudo-class-selector>*',
    '<pseudo-element-selector>': ': <pseudo-class-selector> | <legacy-pseudo-element-selector>',
    '<pseudo-page>': ': [left | right | first | blank | nth(<an+b> [of <custom-ident>]?)]',
    '<pt-class-selector>': "['.' <custom-ident>]+",
    '<pt-name-and-class-selector>': '<pt-name-selector> <pt-class-selector>? | <pt-class-selector>',
    '<pt-name-selector>': "'*' | <custom-ident>",
    '<query-in-parens>': '(<container-query>) | (<size-feature>) | style(<style-query>) | scroll-state(<scroll-state-query>) | <general-enclosed>',
    '<quirky-color>': '<number-token> | <ident-token> | <dimension-token>',
    '<quirky-length>': '<number-token>',
    '<quote>': 'open-quote | close-quote | no-open-quote | no-close-quote',
    '<radial-gradient()>': 'radial-gradient(<radial-gradient-syntax>)',
    '<radial-gradient-syntax>': '[[[<radial-shape> || <radial-size>]? [at <position>]?]! || <color-interpolation-method>]? , <color-stop-list>',
    '<radial-radius>': 'closest-side | farthest-side | <length-percentage [0,∞]>',
    '<radial-shape>': 'circle | ellipse',
    '<radial-size>': 'closest-corner | farthest-corner | <radial-radius>{1,2}',
    '<random()>': 'random(<random-value-sharing>? , <calc-sum> , <calc-sum> , <calc-sum>?)',
    '<random-item()>': 'random-item(<random-value-sharing> , [<declaration-value>?]#)',
    '<random-value-sharing>': '[auto | <dashed-ident>] || match-element | <number [0,1]>',
    '<ratio>': '<number [0,∞]> [/ <number [0,∞]>]?',
    '<ray()>': 'ray(<angle> && <ray-size>? && contain? && [at <position>]?)',
    '<ray-size>': 'closest-side | closest-corner | farthest-side | farthest-corner | sides',
    '<rect()>': "rect([<length-percentage> | auto]{4} [round <'border-radius'>]?)",
    '<rectangular-color-space>': 'srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | lab | oklab | xyz | xyz-d50 | xyz-d65',
    '<referrerpolicy-modifier>': 'referrerpolicy(no-referrer | no-referrer-when-downgrade | same-origin | origin | strict-origin | origin-when-cross-origin | strict-origin-when-cross-origin | unsafe-url)',
    '<relative-control-point>': '<coordinate-pair> [from [start | end | origin]]?',
    '<relative-real-selector-list>': '<relative-real-selector>#',
    '<relative-real-selector>': '<combinator>? <complex-real-selector>',
    '<relative-selector-list>': '<relative-selector>#',
    '<relative-selector>': '<combinator>? <complex-selector>',
    '<relative-size>': 'larger | smaller',
    '<rem()>': 'rem(<calc-sum> , <calc-sum>)',
    '<repeat-style>': 'repeat-x | repeat-y | <repetition>{1,2}',
    '<repeating-conic-gradient()>': 'repeating-conic-gradient(<conic-gradient-syntax>)',
    '<repeating-linear-gradient()>': 'repeating-linear-gradient(<linear-gradient-syntax>)',
    '<repeating-radial-gradient()>': 'repeating-radial-gradient(<radial-gradient-syntax>)',
    '<repetition>': 'repeat | space | round | no-repeat',
    '<request-url-modifier>': '<crossorigin-modifier> | <integrity-modifier> | <referrerpolicy-modifier>',
    '<resolution>': '<dimension>',
    '<reversed-counter-name>': 'reversed(<counter-name>)',
    '<rgb()>': '<legacy-rgb-syntax> | <modern-rgb-syntax>',
    '<rgba()>': '<legacy-rgba-syntax> | <modern-rgba-syntax>',
    '<rotate()>': 'rotate(<angle> | <zero>)',
    '<rotate3d()>': 'rotate3d(<number> , <number> , <number> , [<angle> | <zero>])',
    '<rotateX()>': 'rotateX(<angle> | <zero>)',
    '<rotateY()>': 'rotateY(<angle> | <zero>)',
    '<rotateZ()>': 'rotateZ(<angle> | <zero>)',
    '<round()>': 'round(<rounding-strategy>? , <calc-sum> , <calc-sum>?)',
    '<rounding-strategy>': 'nearest | up | down | to-zero',
    '<running()>': 'running(<custom-ident>)',
    '<saturate()>': 'saturate([<number> | <percentage>]?)',
    '<scale()>': 'scale([<number> | <percentage>]#{1,2})',
    '<scale3d()>': 'scale3d([<number> | <percentage>]#{3})',
    '<scaleX()>': 'scaleX(<number> | <percentage>)',
    '<scaleY()>': 'scaleY(<number> | <percentage>)',
    '<scaleZ()>': 'scaleZ(<number> | <percentage>)',
    '<scope-end>': '<forgiving-selector-list>',
    '<scope-start>': '<forgiving-selector-list>',
    '<scroll()>': 'scroll([<scroller> || <axis>]?)',
    '<scroll-button-direction>': 'up | down | left | right | block-start | block-end | inline-start | inline-end | prev | next',
    '<scroll-state-feature>': '<media-feature>',
    '<scroll-state-in-parens>': '(<scroll-state-query>) | (<scroll-state-feature>) | <general-enclosed>',
    '<scroll-state-query>': 'not <scroll-state-in-parens> | <scroll-state-in-parens> [[and <scroll-state-in-parens>]* | [or <scroll-state-in-parens>]*] | <scroll-state-feature>',
    '<scroller>': 'root | nearest | self',
    '<selector-list>': '<complex-selector-list>',
    '<self-position>': 'center | start | end | self-start | self-end | flex-start | flex-end',
    '<semitones>': '<dimension>',
    '<sepia()>': 'sepia([<number> | <percentage>]?)',
    '<shadow>': '<color>? && <length>{2} <length [0,∞]>? <length>? && inset?',
    '<shape()>': "shape(<'fill-rule'>? from <position> , <shape-command>#)",
    '<shape-box>': '<visual-box> | margin-box',
    '<shape-command>': '<move-command> | <line-command> | close | <horizontal-line-command> | <vertical-line-command> | <curve-command> | <smooth-command> | <arc-command>',
    '<sibling-count()>': 'sibling-count()',
    '<sibling-index()>': 'sibling-index()',
    '<side-or-corner>': '[left | right] || [top | bottom]',
    '<sign()>': 'sign(<calc-sum>)',
    '<signed-integer>': '<number-token>',
    '<signless-integer>': '<number-token>',
    '<simple-selector-list>': '<simple-selector>#',
    '<simple-selector>': '<type-selector> | <subclass-selector>',
    '<sin()>': 'sin(<calc-sum>)',
    '<single-animation-composition>': 'replace | add | accumulate',
    '<single-animation-direction>': 'normal | reverse | alternate | alternate-reverse',
    '<single-animation-fill-mode>': 'none | forwards | backwards | both',
    '<single-animation-iteration-count>': 'infinite | <number [0,∞]>',
    '<single-animation-play-state>': 'running | paused',
    '<single-animation-timeline>': 'auto | none | <dashed-ident> | <scroll()> | <view()>',
    '<single-animation-trigger-type>': 'once | repeat | alternate | state',
    '<single-animation-trigger>': '<single-animation-trigger-type> || [none | auto | [<dashed-ident> | <scroll()> | <view()>] [normal | <length-percentage> | <timeline-range-name> <length-percentage>?]{0,4}]',
    '<single-animation>': "<'animation-duration'> || <easing-function> || <'animation-delay'> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [none | <keyframes-name>] || <single-animation-timeline>",
    '<single-transition-property>': 'all | <custom-ident>',
    '<single-transition>': '<time> || <easing-function> || <time> || <transition-behavior-value> || [none | <single-transition-property>]',
    '<size-feature>': '<media-feature>',
    '<skew()>': 'skew([<angle> | <zero>] , [<angle> | <zero>]?)',
    '<skewX()>': 'skewX(<angle> | <zero>)',
    '<skewY()>': 'skewY(<angle> | <zero>)',
    '<smooth-command>': 'smooth [to <position> [with <control-point>]? | by <coordinate-pair> [with <relative-control-point>]?]',
    '<snap-block()>': 'snap-block(<length> , [start | end | near]?)',
    '<snap-inline()>': 'snap-inline(<length> , [left | right | near]?)',
    '<source-size-list>': '<source-size>#? , <source-size-value>',
    '<source-size-value>': '<length> | auto',
    '<source-size>': '<media-condition> <source-size-value> | auto',
    '<spacing-trim>': 'space-all | normal | space-first | trim-start | trim-both | trim-all',
    '<spread-shadow>': "<'box-shadow-color'>? && <'box-shadow-offset'> [<'box-shadow-blur'> <'box-shadow-spread'>?]? && <'box-shadow-position'>?",
    '<sqrt()>': 'sqrt(<calc-sum>)',
    '<src()>': 'src(<string> <url-modifier>*)',
    '<step-easing-function>': 'step-start | step-end | <steps()>',
    '<step-position>': 'jump-start | jump-end | jump-none | jump-both | start | end',
    '<steps()>': 'steps(<integer> , <step-position>?)',
    '<string()>': 'string(<custom-ident> , [first | start | last | first-except]?)',
    '<string>': '<string-token>',
    '<stripes()>': 'stripes(<color-stripe>#)',
    '<style-feature>': '<declaration> | <ident>',
    '<style-in-parens>': '(<style-query>) | (<style-feature>) | <general-enclosed>',
    '<style-query>': 'not <style-in-parens> | <style-in-parens> [[and <style-in-parens>]* | [or <style-in-parens>]*] | <style-feature>',
    '<subclass-selector>': '<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>',
    '<superellipse()>': 'superellipse(<number> | infinity)',
    '<supports()>': 'supports(<declaration>)',
    '<supports-condition>': 'not <supports-in-parens> | <supports-in-parens> [and <supports-in-parens>]* | <supports-in-parens> [or <supports-in-parens>]*',
    '<supports-decl>': '(<declaration>)',
    '<supports-feature>': '<supports-selector-fn> | <supports-font-tech-fn> | <supports-font-format-fn> | <supports-decl>',
    '<supports-font-format-fn>': 'font-format(<font-format>)',
    '<supports-font-tech-fn>': 'font-tech(<font-tech>)',
    '<supports-in-parens>': '(<supports-condition>) | <supports-feature> | <general-enclosed>',
    '<supports-selector-fn>': 'selector(<complex-selector>)',
    '<symbol>': '<string> | <image> | <custom-ident>',
    '<symbols()>': 'symbols(<symbols-type>? [<string> | <image>]+)',
    '<symbols-type>': 'cyclic | numeric | alphabetic | symbolic | fixed',
    '<syntax-combinator>': "'|'",
    '<syntax-component>': "<syntax-single-component> <syntax-multiplier>? | '<' transform-list '>'",
    '<syntax-multiplier>': "'#' | '+'",
    '<syntax-single-component>': "'<' <syntax-type-name> '>' | <ident>",
    '<syntax-string>': '<string>',
    '<syntax-type-name>': 'angle | color | custom-ident | image | integer | length | length-percentage | number | percentage | resolution | string | time | url | transform-function',
    '<syntax>': "'*' | <syntax-component> [<syntax-combinator> <syntax-component>]* | <syntax-string>",
    '<system-color>': 'AccentColor | AccentColorText | ActiveText | ButtonBorder | ButtonFace | ButtonText | Canvas | CanvasText | Field | FieldText | GrayText | Highlight | HighlightText | LinkText | Mark | MarkText | SelectedItem | SelectedItemText | VisitedText',
    '<system-family-name>': 'caption | icon | menu | message-box | small-caption | status-bar',
    '<tan()>': 'tan(<calc-sum>)',
    '<target-counter()>': 'target-counter([<string> | <url>] , <custom-ident> , <counter-style>?)',
    '<target-counters()>': 'target-counters([<string> | <url>] , <custom-ident> , <string> , <counter-style>?)',
    '<target-name>': '<string>',
    '<target-text()>': 'target-text([<string> | <url>] , [content | before | after | first-letter]?)',
    '<target>': '<target-counter()> | <target-counters()> | <target-text()>',
    '<text-edge>': 'text | ideographic | ideographic-ink | [text | ideographic | ideographic-ink | cap | ex] [text | ideographic | ideographic-ink | alphabetic]',
    '<time-percentage>': '<time> | <percentage>',
    '<time>': '<dimension>',
    '<timeline-range-name>': 'contain | cover | entry | entry-crossing | exit | exit-crossing',
    '<toggle()>': 'toggle(<whole-value>#)',
    '<track-breadth>': '<length-percentage [0,∞]> | <flex [0,∞]> | min-content | max-content | auto',
    '<track-list>': '[<line-names>? [<track-size> | <track-repeat>]]+ <line-names>?',
    '<track-repeat>': 'repeat(<integer [1,∞]> , [<line-names>? <track-size>]+ <line-names>?)',
    '<track-size>': '<track-breadth> | minmax(<inflexible-breadth> , <track-breadth>) | fit-content(<length-percentage [0,∞]>)',
    '<transform-function>': '<matrix()> | <matrix3d()> | <perspective()> | <translate()> | <translateX()> | <translateY()> | <translateZ()> | <translate3d()> | <scale()> | <scaleX()> | <scaleY()> | <scaleZ()> | <scale3d()> | <rotate()> | <rotateX()> | <rotateY()> | <rotateZ()> | <rotate3d()> | <skew()> | <skewX()> | <skewY()>',
    '<transform-list>': '<transform-function>+',
    '<transform-mix()>': 'transform-mix(<progress> , <transform-list> , <transform-list>)',
    '<transition-behavior-value>': 'normal | allow-discrete',
    '<translate()>': 'translate(<length-percentage> , <length-percentage>?)',
    '<translate3d()>': 'translate3d(<length-percentage> , <length-percentage> , <length>)',
    '<translateX()>': 'translateX(<length-percentage>)',
    '<translateY()>': 'translateY(<length-percentage>)',
    '<translateZ()>': 'translateZ(<length>)',
    '<try-size>': 'most-width | most-height | most-block-size | most-inline-size',
    '<try-tactic>': 'flip-block || flip-inline || flip-start',
    '<type()>': 'type(<syntax>)',
    '<type-selector>': "<wq-name> | <ns-prefix>? '*'",
    '<urange>': "u '+' <ident-token> '?'* | u <dimension-token> '?'* | u <number-token> '?'* | u <number-token> <dimension-token> | u <number-token> <number-token> | u '+' '?'+",
    '<uri>': '<url>',
    '<url()>': 'url(<string> <url-modifier>*) | <url-token>',
    '<url-modifier>': '<request-url-modifier> | <ident> | <function-token> <any-value>? )',
    '<url-set>': '<image-set()>',
    '<url>': '<url()> | <src()>',
    '<var()>': 'var(<custom-property-name> , <declaration-value>?)',
    '<vertical-line-command>': 'vline [to [<length-percentage> | top | center | bottom | y-start | y-end] | by <length-percentage>]',
    '<view()>': "view([<axis> || <'view-timeline-inset'>]?)",
    '<visual-box>': 'content-box | padding-box | border-box',
    '<whole-value>': '<declaration-value>?',
    '<wq-name>': '<ns-prefix>? <ident-token>',
    '<x>': '<number>',
    '<xywh()>': "xywh(<length-percentage>{2} <length-percentage [0,∞]>{2} [round <'border-radius'>]?)",
    '<xyz-params>': '<xyz> [<number> | <percentage> | none]{3}',
    '<xyz-space>': 'xyz | xyz-d50 | xyz-d65',
    '<xyz>': 'xyz | xyz-d50 | xyz-d65',
    '<y>': '<number>',
    '<zero>': '<number-token>',
}
